#!/bin/sh

. "$ARCTTY_FLAGS_PROFILE_DIR/config"

# variables imported from the config above
IMAGE=$IMAGE

gh codespace ports forward --codespace "$CODESPACE_NAME" 80:8000 &>/dev/null &
curl -s --max-time 1 http://localhost:8000 &>/dev/null

cat >> WELCOME <<EOF
ðŸ§© The challenge \`$ARCTTY_FLAGS_PROFILE\` will be available in few seconds.
EOF

mkdir -p /usr/local/etc/vscode-dev-containers/
sudo cp WELCOME /usr/local/etc/vscode-dev-containers/first-run-notice.txt
cp WELCOME /workspaces/.codespaces/shared/first-run-notice.txt

ensure() {
  name=$1
  shift
  while true; do
    "$@"
    if [ "$?" -eq 0 ]; then
      break
    fi
    echo "waiting for $name..."
    sleep 1
  done
}

ensure 'image' docker pull --quiet "$IMAGE"
ensure 'container' docker create --quiet --restart always --publish 80:80 --name target "$IMAGE"
ensure 'target' docker start target

TIMEOUT=10
t=0
while true; do
  url=$(gh codespace ports --codespace "$CODESPACE_NAME" --json 'browseUrl,sourcePort' --jq '.[] | select(.sourcePort == 80) | .browseUrl')
  t=$((t + 1))
  if [ -n "$url" ] || [ "$t" -ge "$TIMEOUT" ]; then
    break
  fi
done

if [ -z "$url" ]; then
  echo Failed to publish the service. >&2
  exit 1
fi

gh codespace ports visibility --codespace "$CODESPACE_NAME" 80:public

cat >> WELCOME <<EOF
ðŸŽ‰ Challenge is ready: $url
ðŸ’ª Let's start hacking!
EOF
